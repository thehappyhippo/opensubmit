[Server]

# The OpenSubmit server
url=http://localhost:8000

# Shared secret, must match to /etc/submit/settings.ini on the server
secret=49846zut93purfh977TTTiuhgalkjfnk89

# UUID of this executor
uuid=<replaced by opensubmit-exec configure>

[Execution]

# Place where downloaded archives are extracted, compiled and validated
# The executor will create sub-directories per fetched job
directory=/tmp/

# Delete all student files after the executor did its work.
# Disable this to debug problems that are only reproducible by running the
# downloaded student code manually.
# Disabling this will obviousely fill your hard disk very quickly.
cleanup=True

# Script interpreter to be used for the validation scripts
script_runner=python

# Do you allow multiple executor instances at the same time ?
# The answer is always "NO" when the validation is gathering performance numbers
# Please note that this also delays compile jobs
serialize=True
pidfile=/tmp/executor.pid

# Whatver runs under this account is not allowed to run longer than this time
# This is the ultimate safeguard for deadlocks and submission processes going mad
# This also means that you should not use this account for interactive work
timeout=3600

# Limit the size of result message to a number of bytes, because of database entry
# size. <=0 means no limit, any positive value limits the message size
message_size=10000

# Customize the compilation command to be executed
compile_cmd=make

# Load python directory of additional environment information to query from JSON file for
# testmachine registration. Only one-dimensional directories are supported! For syntax see 
# simplejson package documentation.
# { "Make" : "make -v",
#   "Uname" : "uname -m"
# }
# The JSON sample will execute 'make -v' add the result as 'Make information'  and
# 'uname -m' as 'Uname information'.    
#custom_variables=/tmp/environment.json

[Logging]

# Logging format, as described in the Python logging module documentation
format=%(asctime)-15s (%(process)d): %(message)s

# Target file for logging information
# only needed if to_file=True
file=/tmp/executor.log

# If false, logging goes to console
to_file=False

# Log level, as described in the Python logging module documentation
level=INFO






